{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport dataComunaEstablecimiento from \"./dataComunaEstablecimiento\";\nimport dataTipoEstablecimiento from \"./dataTipoEstablecimiento\";\nimport dataEstablecimientos from \"./dataEstablecimientos\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EstablecimientosScreen = function EstablecimientosScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedComuna = _useState2[0],\n    setSelectedComuna = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTipo = _useState4[0],\n    setSelectedTipo = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    filteredEstablecimientos = _useState6[0],\n    setFilteredEstablecimientos = _useState6[1];\n  var handleComunaChange = function handleComunaChange(value) {\n    setSelectedComuna(value);\n    setFilteredEstablecimientos([]);\n  };\n  var handleTipoChange = function handleTipoChange(value) {\n    setSelectedTipo(value);\n    setFilteredEstablecimientos([]);\n  };\n  var filterEstablecimientos = function filterEstablecimientos() {\n    var filtered = dataEstablecimientos.filter(function (establecimiento) {\n      return establecimiento.idComuna === selectedComuna && establecimiento.idTipo === selectedTipo;\n    });\n    setFilteredEstablecimientos(filtered);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(Picker, {\n      selectedValue: selectedComuna,\n      onValueChange: function onValueChange(value) {\n        return handleComunaChange(value);\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"Selecciona una comuna\",\n        value: null\n      }), \" \", dataComunaEstablecimiento.map(function (comuna, index) {\n        return _jsx(Picker.Item, {\n          label: comuna.name,\n          value: comuna.id\n        }, index);\n      })]\n    }), _jsxs(Picker, {\n      selectedValue: selectedTipo,\n      onValueChange: function onValueChange(value) {\n        return handleTipoChange(value);\n      },\n      children: [_jsx(Picker.Item, {\n        label: \"Selecciona un tipo de establecimiento\",\n        value: null\n      }), \" \", dataTipoEstablecimiento.map(function (tipo, index) {\n        return _jsx(Picker.Item, {\n          label: tipo.nombre,\n          value: tipo.id\n        }, index);\n      })]\n    }), _jsx(Button, {\n      title: \"Filtrar\",\n      onPress: filterEstablecimientos\n    }), filteredEstablecimientos.length > 0 ? _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Establecimientos filtrados:\"\n      }), filteredEstablecimientos.map(function (establecimiento, index) {\n        return _jsxs(Text, {\n          children: [establecimiento.nombre, \" - Comuna: \", establecimiento.idComuna, \" - Tipo: \", establecimiento.idTipo]\n        }, index);\n      })]\n    }) : null]\n  });\n};\nexport default EstablecimientosScreen;","map":{"version":3,"names":["React","useState","View","Text","Picker","Button","dataComunaEstablecimiento","dataTipoEstablecimiento","dataEstablecimientos","jsx","_jsx","jsxs","_jsxs","EstablecimientosScreen","_useState","_useState2","_slicedToArray","selectedComuna","setSelectedComuna","_useState3","_useState4","selectedTipo","setSelectedTipo","_useState5","_useState6","filteredEstablecimientos","setFilteredEstablecimientos","handleComunaChange","value","handleTipoChange","filterEstablecimientos","filtered","filter","establecimiento","idComuna","idTipo","children","selectedValue","onValueChange","Item","label","map","comuna","index","name","id","tipo","nombre","title","onPress","length"],"sources":["C:/Users/NTK_17/Desktop/Tesis/proyecto-react-js/src/consts/EstablecimientosScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Picker, Button } from 'react-native'; // Importa Picker y Button de react-native\r\nimport dataComunaEstablecimiento from './dataComunaEstablecimiento'; // Importa el arreglo de datos de comuna\r\nimport dataTipoEstablecimiento from './dataTipoEstablecimiento'; // Importa el arreglo de datos de tipo de establecimiento\r\nimport dataEstablecimientos from './dataEstablecimientos'; // Importa el arreglo de datos de establecimientos\r\n\r\nconst EstablecimientosScreen = () => {\r\n  const [selectedComuna, setSelectedComuna] = useState(null); // Estado para almacenar la comuna seleccionada\r\n  const [selectedTipo, setSelectedTipo] = useState(null); // Estado para almacenar el tipo de establecimiento seleccionado\r\n  const [filteredEstablecimientos, setFilteredEstablecimientos] = useState([]); // Estado para almacenar los establecimientos filtrados\r\n\r\n  // Función para manejar el cambio de la selección de la comuna\r\n  const handleComunaChange = (value) => {\r\n    setSelectedComuna(value); // Actualiza el estado con la comuna seleccionada\r\n    setFilteredEstablecimientos([]); // Reinicia el estado de los establecimientos filtrados\r\n  };\r\n\r\n  // Función para manejar el cambio de la selección del tipo de establecimiento\r\n  const handleTipoChange = (value) => {\r\n    setSelectedTipo(value); // Actualiza el estado con el tipo de establecimiento seleccionado\r\n    setFilteredEstablecimientos([]); // Reinicia el estado de los establecimientos filtrados\r\n  };\r\n\r\n  // Función para filtrar los establecimientos basados en la comuna y el tipo de establecimiento seleccionados\r\n  const filterEstablecimientos = () => {\r\n    const filtered = dataEstablecimientos.filter(\r\n      (establecimiento) =>\r\n        establecimiento.idComuna === selectedComuna && establecimiento.idTipo === selectedTipo\r\n    );\r\n    setFilteredEstablecimientos(filtered); // Actualiza el estado de los establecimientos filtrados\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {/* Picker para seleccionar la comuna */}\r\n      <Picker\r\n        selectedValue={selectedComuna}\r\n        onValueChange={(value) => handleComunaChange(value)}\r\n      >\r\n        <Picker.Item label=\"Selecciona una comuna\" value={null} /> {/* Opción predeterminada */}\r\n        {dataComunaEstablecimiento.map((comuna, index) => (\r\n          <Picker.Item key={index} label={comuna.name} value={comuna.id} />\r\n        ))}\r\n      </Picker>\r\n      {/* Picker para seleccionar el tipo de establecimiento */}\r\n      <Picker\r\n        selectedValue={selectedTipo}\r\n        onValueChange={(value) => handleTipoChange(value)}\r\n      >\r\n        <Picker.Item label=\"Selecciona un tipo de establecimiento\" value={null} /> {/* Opción predeterminada */}\r\n        {dataTipoEstablecimiento.map((tipo, index) => (\r\n          <Picker.Item key={index} label={tipo.nombre} value={tipo.id} />\r\n        ))}\r\n      </Picker>\r\n      {/* Botón para filtrar los establecimientos */}\r\n      <Button title=\"Filtrar\" onPress={filterEstablecimientos} />\r\n      {/* Mostrar los establecimientos filtrados */}\r\n      {filteredEstablecimientos.length > 0 ? (\r\n        <View>\r\n                <Text>Establecimientos filtrados:</Text>\r\n                {filteredEstablecimientos.map((establecimiento, index) => (\r\n        <Text key={index}>\r\n          {establecimiento.nombre} - Comuna: {establecimiento.idComuna} - Tipo: {establecimiento.idTipo}\r\n        </Text>\r\n      ))}\r\n    </View>\r\n  ) : null}\r\n</View>\r\n\r\n);\r\n};\r\n\r\nexport default EstablecimientosScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}