{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport dataEstablecimientos from \"./dataEstablecimientos\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar EstablecimientosScreen = function EstablecimientosScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedEstablecimiento = _useState2[0],\n    setSelectedEstablecimiento = _useState2[1];\n  var handleEstablecimientoPress = function handleEstablecimientoPress(value) {\n    var establecimiento = dataEstablecimientos.find(function (est) {\n      return est.idComuna === value;\n    });\n    setSelectedEstablecimiento(establecimiento);\n  };\n  return _jsxs(View, {\n    children: [dataEstablecimientos.map(function (establecimiento, index) {\n      return _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return handleEstablecimientoPress(establecimiento);\n        },\n        children: _jsxs(View, {\n          children: [_jsxs(Text, {\n            children: [\"ID Comuna: \", establecimiento.idComuna]\n          }), _jsxs(Text, {\n            children: [\"ID Tipo: \", establecimiento.idTipo]\n          }), _jsxs(Text, {\n            children: [\"Nombre: \", establecimiento.nombre]\n          }), _jsx(Text, {\n            children: \"------------------------------\"\n          })]\n        })\n      }, index);\n    }), selectedEstablecimiento && _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Establecimiento seleccionado:\"\n      }), _jsxs(Text, {\n        children: [\"ID Comuna: \", selectedEstablecimiento.idComuna]\n      }), _jsxs(Text, {\n        children: [\"ID Tipo: \", selectedEstablecimiento.idTipo]\n      }), _jsxs(Text, {\n        children: [\"Nombre: \", selectedEstablecimiento.nombre]\n      })]\n    })]\n  });\n};\nexport default EstablecimientosScreen;","map":{"version":3,"names":["React","useState","View","Text","Picker","dataEstablecimientos","jsxs","_jsxs","jsx","_jsx","EstablecimientosScreen","_useState","_useState2","_slicedToArray","selectedEstablecimiento","setSelectedEstablecimiento","handleEstablecimientoPress","value","establecimiento","find","est","idComuna","children","map","index","TouchableOpacity","onPress","idTipo","nombre"],"sources":["C:/Users/NTK_17/Desktop/Tesis/proyecto-react-js/src/consts/EstablecimientosScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, Picker } from 'react-native'; // Importa Picker de react-native\r\nimport dataEstablecimientos from './dataEstablecimientos'; // Importa el arreglo de datos\r\n\r\nconst EstablecimientosScreen = () => {\r\n  const [selectedEstablecimiento, setSelectedEstablecimiento] = useState(null); // Estado para almacenar el establecimiento seleccionado\r\n\r\n  const handleEstablecimientoPress = (value) => {\r\n    const establecimiento = dataEstablecimientos.find((est) => est.idComuna === value); // Encuentra el establecimiento en el arreglo de datos basado en el valor seleccionado del Picker\r\n    setSelectedEstablecimiento(establecimiento); // Actualiza el estado con el establecimiento seleccionado\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      {dataEstablecimientos.map((establecimiento, index) => (\r\n        <TouchableOpacity\r\n          key={index}\r\n          onPress={() => handleEstablecimientoPress(establecimiento)} // Llama a la función handleEstablecimientoPress al presionar el botón\r\n        >\r\n          <View>\r\n            <Text>ID Comuna: {establecimiento.idComuna}</Text>\r\n            <Text>ID Tipo: {establecimiento.idTipo}</Text>\r\n            <Text>Nombre: {establecimiento.nombre}</Text>\r\n            <Text>------------------------------</Text>\r\n          </View>\r\n        </TouchableOpacity>\r\n      ))}\r\n      {selectedEstablecimiento && (\r\n        <View>\r\n          <Text>Establecimiento seleccionado:</Text>\r\n          <Text>ID Comuna: {selectedEstablecimiento.idComuna}</Text>\r\n          <Text>ID Tipo: {selectedEstablecimiento.idTipo}</Text>\r\n          <Text>Nombre: {selectedEstablecimiento.nombre}</Text>\r\n        </View>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default EstablecimientosScreen;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAExC,OAAOC,oBAAoB;AAA+B,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1D,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAA,EAAS;EACnC,IAAAC,SAAA,GAA8DV,QAAQ,CAAC,IAAI,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArEG,uBAAuB,GAAAF,UAAA;IAAEG,0BAA0B,GAAAH,UAAA;EAE1D,IAAMI,0BAA0B,GAAG,SAA7BA,0BAA0BA,CAAIC,KAAK,EAAK;IAC5C,IAAMC,eAAe,GAAGb,oBAAoB,CAACc,IAAI,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACC,QAAQ,KAAKJ,KAAK;IAAA,EAAC;IAClFF,0BAA0B,CAACG,eAAe,CAAC;EAC7C,CAAC;EAED,OACEX,KAAA,CAACL,IAAI;IAAAoB,QAAA,GACFjB,oBAAoB,CAACkB,GAAG,CAAC,UAACL,eAAe,EAAEM,KAAK;MAAA,OAC/Cf,IAAA,CAACgB,gBAAgB;QAEfC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMV,0BAA0B,CAACE,eAAe,CAAC;QAAA,CAAC;QAAAI,QAAA,EAE3Df,KAAA,CAACL,IAAI;UAAAoB,QAAA,GACHf,KAAA,CAACJ,IAAI;YAAAmB,QAAA,GAAC,aAAW,EAACJ,eAAe,CAACG,QAAQ;UAAA,EAAQ,EAClDd,KAAA,CAACJ,IAAI;YAAAmB,QAAA,GAAC,WAAS,EAACJ,eAAe,CAACS,MAAM;UAAA,EAAQ,EAC9CpB,KAAA,CAACJ,IAAI;YAAAmB,QAAA,GAAC,UAAQ,EAACJ,eAAe,CAACU,MAAM;UAAA,EAAQ,EAC7CnB,IAAA,CAACN,IAAI;YAAAmB,QAAA,EAAC;UAA8B,EAAO;QAAA;MACtC,GARFE,KAAK,CASO;IAAA,CACpB,CAAC,EACDV,uBAAuB,IACtBP,KAAA,CAACL,IAAI;MAAAoB,QAAA,GACHb,IAAA,CAACN,IAAI;QAAAmB,QAAA,EAAC;MAA6B,EAAO,EAC1Cf,KAAA,CAACJ,IAAI;QAAAmB,QAAA,GAAC,aAAW,EAACR,uBAAuB,CAACO,QAAQ;MAAA,EAAQ,EAC1Dd,KAAA,CAACJ,IAAI;QAAAmB,QAAA,GAAC,WAAS,EAACR,uBAAuB,CAACa,MAAM;MAAA,EAAQ,EACtDpB,KAAA,CAACJ,IAAI;QAAAmB,QAAA,GAAC,UAAQ,EAACR,uBAAuB,CAACc,MAAM;MAAA,EAAQ;IAAA,EAExD;EAAA,EACI;AAEX,CAAC;AAED,eAAelB,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}