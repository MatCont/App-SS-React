{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Picker } from '@react-native-picker/picker';\nimport { useNavigation } from '@react-navigation/native';\nimport { PrimaryButton } from \"../components/Button\";\nimport COLORS from \"./../../consts/colors\";\nimport dataComunaEstablecimiento from \"../../consts/dataComunaEstablecimiento\";\nimport dataEstablecimientos from \"../../consts/dataEstablecimientos\";\nimport dataTipoEstablecimiento from \"../../consts/dataTipoEstablecimiento\";\nimport DateTimePicker from '@react-native-community/datetimepicker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar FormularioScreen = function FormularioScreen() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    agresion = _useState2[0],\n    setAgresion = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    agresor = _useState4[0],\n    setAgresor = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    date = _useState6[0],\n    setDate = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    time = _useState8[0],\n    setTime = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    nombreAgresor = _useState10[0],\n    setNombreAgresor = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    rutAgresor = _useState12[0],\n    setRutAgresor = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    rutValidoAgresor = _useState14[0],\n    setRutValidoAgresor = _useState14[1];\n  var _useState15 = useState(false),\n    _useState16 = _slicedToArray(_useState15, 2),\n    rutValidoTestigo1 = _useState16[0],\n    setRutValidoTestigo1 = _useState16[1];\n  var _useState17 = useState(false),\n    _useState18 = _slicedToArray(_useState17, 2),\n    rutValidoTestigo2 = _useState18[0],\n    setRutValidoTestigo2 = _useState18[1];\n  var _useState19 = useState(''),\n    _useState20 = _slicedToArray(_useState19, 2),\n    sectorAgresor = _useState20[0],\n    setSectorAgresor = _useState20[1];\n  var _useState21 = useState(''),\n    _useState22 = _slicedToArray(_useState21, 2),\n    domicilioAgresor = _useState22[0],\n    setDomicilioAgresor = _useState22[1];\n  var _useState23 = useState(''),\n    _useState24 = _slicedToArray(_useState23, 2),\n    telefonoAgresor = _useState24[0],\n    setTelefonoAgresor = _useState24[1];\n  var _useState25 = useState(''),\n    _useState26 = _slicedToArray(_useState25, 2),\n    unidad = _useState26[0],\n    setUnidad = _useState26[1];\n  var _useState27 = useState(''),\n    _useState28 = _slicedToArray(_useState27, 2),\n    comunaId = _useState28[0],\n    setComunaId = _useState28[1];\n  var _useState29 = useState(''),\n    _useState30 = _slicedToArray(_useState29, 2),\n    nombreComuna = _useState30[0],\n    setNombreComuna = _useState30[1];\n  var _useState31 = useState(''),\n    _useState32 = _slicedToArray(_useState31, 2),\n    tipoId = _useState32[0],\n    setTipoId = _useState32[1];\n  var _useState33 = useState(''),\n    _useState34 = _slicedToArray(_useState33, 2),\n    nombreTipo = _useState34[0],\n    setNombreTipo = _useState34[1];\n  var _useState35 = useState(''),\n    _useState36 = _slicedToArray(_useState35, 2),\n    establecimientoId = _useState36[0],\n    setEstablecimientoId = _useState36[1];\n  var _useState37 = useState([]),\n    _useState38 = _slicedToArray(_useState37, 2),\n    establecimientos = _useState38[0],\n    setEstablecimientos = _useState38[1];\n  var servicioSalud = 'Servicio de salud del BioBio';\n  var _useState39 = useState(''),\n    _useState40 = _slicedToArray(_useState39, 2),\n    nombreTestigo1 = _useState40[0],\n    setNombreTestigo1 = _useState40[1];\n  var _useState41 = useState(''),\n    _useState42 = _slicedToArray(_useState41, 2),\n    rutTestigo1 = _useState42[0],\n    setRutTestigo1 = _useState42[1];\n  var _useState43 = useState(''),\n    _useState44 = _slicedToArray(_useState43, 2),\n    telefonoTestigo1 = _useState44[0],\n    setTelefonoTestigo1 = _useState44[1];\n  var _useState45 = useState(''),\n    _useState46 = _slicedToArray(_useState45, 2),\n    nombreTestigo2 = _useState46[0],\n    setNombreTestigo2 = _useState46[1];\n  var _useState47 = useState(''),\n    _useState48 = _slicedToArray(_useState47, 2),\n    rutTestigo2 = _useState48[0],\n    setRutTestigo2 = _useState48[1];\n  var _useState49 = useState(''),\n    _useState50 = _slicedToArray(_useState49, 2),\n    telefonoTestigo2 = _useState50[0],\n    setTelefonoTestigo2 = _useState50[1];\n  var _useState51 = useState(''),\n    _useState52 = _slicedToArray(_useState51, 2),\n    descripcion = _useState52[0],\n    setDescripcion = _useState52[1];\n  var navigation = useNavigation();\n  var formatDate = function formatDate(text) {\n    var cleaned = text.replace(/[^0-9]/g, '');\n    var match = cleaned.match(/^(\\d{2})(\\d{2})(\\d{4})$/);\n    if (match) {\n      var formatted = match[1] + '/' + match[2] + '/' + match[3];\n      setDate(formatted);\n    } else {\n      setDate(cleaned);\n    }\n  };\n  var handleHoraChange = function handleHoraChange(text) {\n    var formattedHora = '';\n    if (text.length === 2 && time.length < 2) {\n      formattedHora = text + \":\";\n    } else if (text.length > 2 && time.length === 2) {\n      formattedHora = text.slice(0, 2) + \":\" + text.slice(2);\n    } else {\n      formattedHora = text;\n    }\n    setTime(formattedHora);\n  };\n  var clearNum = function clearNum(text) {\n    var cleaned = text.replace(/[^0-9]/g, '');\n    setTelefonoAgresor(cleaned);\n  };\n  var verificarRut = function verificarRut(rut, setRut) {\n    var rutLimpio = rut.replace(/[^0-9Kk]/g, '');\n    var rutRegExp = /^(\\d+)([kK\\d])$/;\n    var rutSinDigito = rutLimpio.slice(0, -1);\n    var match = rutLimpio.match(rutRegExp);\n    if (!match) {\n      console.log('Error', 'El Rut ingresado no es válido');\n      return;\n    }\n    var num = parseInt(match[1]);\n    var dv = match[2].toUpperCase();\n    var M = 0;\n    var S = 1;\n    var numRut = num;\n    for (; numRut; numRut = Math.floor(numRut / 10)) {\n      S = (S + numRut % 10 * (9 - M++ % 6)) % 11;\n    }\n    var dvEsperado = S ? S - 1 + '' : 'K';\n    if (dv === dvEsperado) {\n      console.log('Éxito', 'El Rut ingresado es válido');\n      setRut(rutSinDigito);\n    } else {\n      console.log('Error', 'El Rut ingresado es incorrecto');\n      setRut(false);\n    }\n  };\n  var getEstablecimientosPorComunaYTipo = function getEstablecimientosPorComunaYTipo(comunaId, tipoId) {\n    var establecimientosFiltrados = dataEstablecimientos.filter(function (establecimiento) {\n      return establecimiento.idComuna === comunaId && establecimiento.idTipo === tipoId;\n    });\n    var nombresEstablecimientos = establecimientosFiltrados.map(function (establecimiento) {\n      return establecimiento.nombre;\n    });\n    setEstablecimientoId('');\n    return nombresEstablecimientos;\n  };\n  var handleComunaChange = function handleComunaChange(comunaId) {\n    setComunaId(comunaId);\n    var comuna = dataComunaEstablecimiento.find(function (c) {\n      return c.id === comunaId;\n    });\n    setNombreComuna(comuna ? comuna.name : '');\n    var nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\n    setEstablecimientos(nuevosEstablecimientos);\n  };\n  var handleTipoChange = function handleTipoChange(tipoId) {\n    setTipoId(tipoId);\n    var tipo = dataTipoEstablecimiento.find(function (t) {\n      return t.id === tipoId;\n    });\n    setNombreTipo(tipo ? tipo.nombre : '');\n    var nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\n    setEstablecimientos(nuevosEstablecimientos);\n  };\n  var handleEstablecimientoChange = function handleEstablecimientoChange(establecimientoId) {\n    setEstablecimientoId(establecimientoId);\n  };\n  var saveNewForms = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!agresion || !date || !time || !comuna || !establecimiento || !unidad || !nombreTestigo1 || !rutTestigo1 || !telefonoTestigo1 || !descripcion) {\n        Alert.alert('Error', 'Por favor complete todos los campos obligatorios');\n        console.log('error');\n      } else {\n        Alert.alert('Guardado exitoso');\n      }\n    });\n    return function saveNewForms() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(StatusBar, {\n      backgroundColor: \"black\"\n    }), _jsxs(ScrollView, {\n      children: [_jsx(Image, {\n        style: styles.image,\n        source: require(\"./../../assets/logo_MS.png\")\n      }), _jsx(Text, {\n        style: {\n          fontSize: 15,\n          color: \"black\",\n          fontWeight: 'bold',\n          textAlign: 'center'\n        },\n        children: \"FORMULARIO DE NOTIFICACI\\xD3N DE AGRESIONES HACIA LOS FUNCIONARIOS DE LA SALUD P\\xDABLICA\"\n      }), _jsxs(View, {\n        style: {\n          flex: 1,\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: [_jsx(TouchableOpacity, {\n          onPress: showPicker,\n          children: _jsx(Text, {\n            children: \"Selecciona una hora\"\n          })\n        }), showTimePicker && _jsx(DateTimePicker, {\n          value: chosenTime,\n          mode: \"time\",\n          is24Hour: true,\n          display: \"default\",\n          onChange: onTimeChange\n        }), _jsxs(Text, {\n          children: [\"La hora seleccionada es: \", chosenTime.toLocaleTimeString()]\n        })]\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Datos de la agresi\\xF3n\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese fecha (*)\"\n      }), _jsx(TextInput, {\n        value: date,\n        placeholder: \"dd/mm/yyyy\",\n        onChangeText: formatDate,\n        maxLength: 8,\n        style: styles.textInput\n      }), date ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"----------------------------------\"\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"----------------------------------\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese hora*\"\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        value: time,\n        onChangeText: handleHoraChange,\n        placeholder: \"hh:mm\",\n        keyboardType: \"numeric\",\n        maxLength: 5\n      }), time ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese tipo de agresi\\xF3n*\"\n      }), _jsx(View, {\n        style: styles.multiSelect,\n        children: _jsxs(Picker, {\n          selectedValue: agresion,\n          onValueChange: function onValueChange(itemValue) {\n            return setAgresion(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Seleccione\",\n            value: \"\"\n          }), _jsx(Picker.Item, {\n            label: \"Con arma de fuego\",\n            value: \"Arma de fuego\"\n          }), _jsx(Picker.Item, {\n            label: \"Con arma blanca\",\n            value: \"Arma blanca\"\n          }), _jsx(Picker.Item, {\n            label: \"Con objeto contundente\",\n            value: \"Objeto contundente\"\n          }), _jsx(Picker.Item, {\n            label: \"Sexual\",\n            value: \"Sexual\"\n          }), _jsx(Picker.Item, {\n            label: \"Empujones, combos, patadas\",\n            value: \"Empujones, combos, patadas\"\n          }), _jsx(Picker.Item, {\n            label: \"Otros tipo de agresi\\xF3n f\\xEDsica\",\n            value: \"Otros tipo de agresi\\xF3n f\\xEDsica\"\n          }), _jsx(Picker.Item, {\n            label: \"Ataque contra la infraestructura\",\n            value: \"Ataque contra la infraestructura\"\n          }), _jsx(Picker.Item, {\n            label: \"Sexual verbal\",\n            value: \"Sexual verbal\"\n          }), _jsx(Picker.Item, {\n            label: \"Amenazas u hostigamientos\",\n            value: \"Amenazas u hostigamientos\"\n          }), _jsx(Picker.Item, {\n            label: \"Insultos o garabatos\",\n            value: \"Insultos o garabatos\"\n          }), _jsx(Picker.Item, {\n            label: \"Burlas o descalificaciones\",\n            value: \"Burlas o descalificaciones\"\n          }), _jsx(Picker.Item, {\n            label: \"Calumnias por redes sociales, injurias\",\n            value: \"Injurias,\\r calumnias por redes sociales\"\n          }), _jsx(Picker.Item, {\n            label: \"Otro tipo de agresi\\xF3n verbal\",\n            value: \"Otro tipo de agresi\\xF3n verbal\"\n          })]\n        })\n      }), agresion ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Tipo de agresor\"\n      }), _jsx(View, {\n        style: styles.multiSelect,\n        children: _jsxs(Picker, {\n          selectedValue: agresor,\n          onValueChange: function onValueChange(itemValue) {\n            return setAgresor(itemValue);\n          },\n          children: [_jsx(Picker.Item, {\n            label: \"Seleccione\",\n            value: \"\"\n          }), _jsx(Picker.Item, {\n            label: \"Paciente\",\n            value: \"Paciente\"\n          }), _jsx(Picker.Item, {\n            label: \"Familiar/acompa\\xF1ante del paciente\",\n            value: \"Familiar/acompa\\xF1ante del paciente\"\n          }), _jsx(Picker.Item, {\n            label: \"Paciente de Salud Mental\",\n            value: \"Paciente de Salud Mental\"\n          }), _jsx(Picker.Item, {\n            label: \"Otro/a\",\n            value: \"Otro/a\"\n          })]\n        })\n      }), agresor ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Datos del agresor\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese nombre\"\n      }), _jsx(TextInput, {\n        value: nombreAgresor,\n        onChangeText: setNombreAgresor,\n        placeholder: \"Nombre completo\",\n        maxLength: 60,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese rut\"\n      }), _jsx(TextInput, {\n        value: rutAgresor,\n        onChangeText: setRutAgresor,\n        onBlur: function onBlur() {\n          return verificarRut(rutAgresor, setRutValidoAgresor);\n        },\n        maxLength: 9,\n        keyboardType: \"numeric\",\n        placeholder: \"Rut sin puntos ni guion\",\n        style: styles.textInput\n      }), rutValidoAgresor ? _jsx(Text, {\n        style: {\n          color: 'green',\n          alignSelf: 'center'\n        },\n        children: \"Rut v\\xE1lido\"\n      }) : _jsx(Text, {\n        style: {\n          color: 'red',\n          alignSelf: 'center'\n        },\n        children: \"Rut incorrecto\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese sector del agresor\"\n      }), _jsx(TextInput, {\n        value: sectorAgresor,\n        onChangeText: setSectorAgresor,\n        placeholder: \"Sector\",\n        maxLength: 20,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese direcci\\xF3n\"\n      }), _jsx(TextInput, {\n        value: domicilioAgresor,\n        onChangeText: setDomicilioAgresor,\n        placeholder: \"domicilio\",\n        maxLength: 30,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese tel\\xE9fono\"\n      }), _jsx(TextInput, {\n        value: telefonoAgresor,\n        onChangeText: clearNum,\n        keyboardType: \"numeric\",\n        placeholder: \"111111111\",\n        maxLength: 9,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Datos del lugar de la agresi\\xF3n\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Seleccione una comuna\"\n      }), _jsx(View, {\n        style: styles.multiSelect,\n        children: _jsxs(Picker, {\n          selectedValue: comunaId,\n          onValueChange: handleComunaChange,\n          children: [_jsx(Picker.Item, {\n            label: \"Seleccione una comuna\",\n            value: \"\"\n          }), dataComunaEstablecimiento.map(function (comuna) {\n            return _jsx(Picker.Item, {\n              label: comuna.name,\n              value: comuna.id\n            }, comuna.id);\n          })]\n        })\n      }), comunaId ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Seleccione un tipo de establecimiento\"\n      }), _jsx(View, {\n        style: styles.multiSelect,\n        children: _jsxs(Picker, {\n          selectedValue: tipoId,\n          onValueChange: handleTipoChange,\n          children: [_jsx(Picker.Item, {\n            label: \"Seleccione un tipo de establecimiento\",\n            value: \"\"\n          }), dataTipoEstablecimiento.map(function (tipo) {\n            return _jsx(Picker.Item, {\n              label: tipo.nombre,\n              value: tipo.id\n            }, tipo.id);\n          })]\n        })\n      }), tipoId ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Seleccione un establecimiento\"\n      }), _jsx(View, {\n        style: styles.multiSelect,\n        children: _jsxs(Picker, {\n          selectedValue: establecimientoId,\n          onValueChange: handleEstablecimientoChange,\n          children: [_jsx(Picker.Item, {\n            label: \"Seleccione un establecimiento\",\n            value: \"\"\n          }), establecimientos.map(function (nombre, index) {\n            return _jsx(Picker.Item, {\n              label: nombre,\n              value: nombre\n            }, index);\n          })]\n        })\n      }), establecimientoId ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese unidad\"\n      }), _jsx(TextInput, {\n        value: unidad,\n        onChangeText: setUnidad,\n        placeholder: \"Unidad\",\n        maxLength: 20,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Datos testigos\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese nombre de testigo 1*\"\n      }), _jsx(TextInput, {\n        value: nombreTestigo1,\n        onChangeText: setNombreTestigo1,\n        placeholder: \"Nombre\",\n        maxLength: 50,\n        style: styles.textInput\n      }), nombreTestigo1 ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese rut de testigo 1*\"\n      }), _jsx(TextInput, {\n        value: rutTestigo1,\n        onChangeText: setRutTestigo1,\n        onBlur: function onBlur() {\n          return verificarRut(rutTestigo1, setRutValidoTestigo1);\n        },\n        placeholder: \"Rut sin puntos ni guion\",\n        maxLength: 12,\n        keyboardType: \"numeric\",\n        style: styles.textInput\n      }), rutValidoTestigo1 ? _jsx(Text, {\n        style: {\n          color: 'green',\n          alignSelf: 'center'\n        },\n        children: \"Rut v\\xE1lido\"\n      }) : _jsx(Text, {\n        style: {\n          color: 'red',\n          alignSelf: 'center'\n        },\n        children: \"Rut incorrecto\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese telefono de testigo 1*\"\n      }), _jsx(TextInput, {\n        value: telefonoTestigo1,\n        onChangeText: setTelefonoTestigo1,\n        placeholder: \"Telefono\",\n        maxLength: 9,\n        keyboardType: \"numeric\",\n        style: styles.textInput\n      }), telefonoTestigo1 ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Opcional tertigo 2\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese nombre de testigo 2\"\n      }), _jsx(TextInput, {\n        value: nombreTestigo2,\n        onChangeText: setNombreTestigo2,\n        placeholder: \"Nombre\",\n        maxLength: 50,\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese rut de testigo 2\"\n      }), _jsx(TextInput, {\n        value: rutTestigo2,\n        onChangeText: setRutTestigo2,\n        onBlur: function onBlur() {\n          return verificarRut(rutTestigo2, setRutValidoTestigo2);\n        },\n        placeholder: \"Rut sin puntos ni guion\",\n        maxLength: 9,\n        keyboardType: \"numeric\",\n        style: styles.textInput\n      }), rutValidoTestigo2 ? _jsx(Text, {\n        style: {\n          color: 'green',\n          alignSelf: 'center'\n        },\n        children: \"Rut v\\xE1lido\"\n      }) : _jsx(Text, {\n        style: {\n          color: 'red',\n          alignSelf: 'center'\n        },\n        children: \"Rut incorrecto\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Ingrese telefono de testigo 2\"\n      }), _jsx(TextInput, {\n        value: telefonoTestigo2,\n        onChangeText: setTelefonoTestigo2,\n        placeholder: \"Telefono\",\n        maxLength: 9,\n        keyboardType: \"numeric\",\n        style: styles.textInput\n      }), _jsx(Text, {\n        style: styles.Titulo,\n        children: \"Descripci\\xF3n de la agresi\\xF3n\"\n      }), _jsx(Text, {\n        style: styles.subTitulo,\n        children: \"Descripci\\xF3n*\"\n      }), _jsx(TextInput, {\n        style: styles.descrip,\n        multiline: true,\n        value: descripcion,\n        onChangeText: setDescripcion\n      }), descripcion ? _jsx(Text, {\n        style: styles.campoIngresado,\n        children: \"Campo ingresado\"\n      }) : _jsx(Text, {\n        style: styles.campoObligatorio,\n        children: \"Campo obligatorio\"\n      }), _jsx(View, {\n        children: _jsx(PrimaryButton, {\n          style: styles.Buttons,\n          onPress: function onPress() {\n            return navigation.navigate(\"Formularios\");\n          },\n          title: \"Enviar\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    paddingVertical: 20,\n    paddingHorizontal: 30\n  },\n  Titulo: {\n    marginTop: 15,\n    color: '#1e6496',\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  campoObligatorio: {\n    color: 'red'\n  },\n  campoIngresado: {\n    color: 'green'\n  },\n  subTitulo: {\n    flex: 1,\n    marginTop: 15,\n    height: 35,\n    borderRadius: 10,\n    flexDirection: 'row',\n    paddingHorizontal: 20\n  },\n  textInput: {\n    flex: 1,\n    height: 50,\n    fontSize: 15,\n    borderRadius: 10,\n    flexDirection: 'row',\n    borderWidth: 1,\n    borderColor: 'black',\n    backgroundColor: COLORS.white,\n    alignItems: 'center',\n    paddingHorizontal: 20\n  },\n  Buttons: {\n    fontSize: 13\n  },\n  multiSelect: {\n    height: 50,\n    borderWidth: 1,\n    borderColor: 'black',\n    borderRadius: 10,\n    backgroundColor: COLORS.white\n  },\n  descrip: {\n    backgroundColor: 'white',\n    alignSelf: 'center',\n    borderWidth: 1,\n    borderColor: 'black',\n    paddingStart: 10,\n    paddingEnd: 10,\n    width: '100%',\n    height: 200,\n    borderRadius: 30\n  },\n  image: {\n    width: 100,\n    height: 100,\n    alignSelf: 'center',\n    marginTop: 30\n  }\n});\nexport default FormularioScreen;","map":{"version":3,"names":["React","useState","StyleSheet","Text","View","TextInput","Image","StatusBar","Button","Alert","ScrollView","TouchableOpacity","Platform","Picker","useNavigation","PrimaryButton","COLORS","dataComunaEstablecimiento","dataEstablecimientos","dataTipoEstablecimiento","DateTimePicker","jsx","_jsx","jsxs","_jsxs","FormularioScreen","_useState","_useState2","_slicedToArray","agresion","setAgresion","_useState3","_useState4","agresor","setAgresor","_useState5","_useState6","date","setDate","_useState7","_useState8","time","setTime","_useState9","_useState10","nombreAgresor","setNombreAgresor","_useState11","_useState12","rutAgresor","setRutAgresor","_useState13","_useState14","rutValidoAgresor","setRutValidoAgresor","_useState15","_useState16","rutValidoTestigo1","setRutValidoTestigo1","_useState17","_useState18","rutValidoTestigo2","setRutValidoTestigo2","_useState19","_useState20","sectorAgresor","setSectorAgresor","_useState21","_useState22","domicilioAgresor","setDomicilioAgresor","_useState23","_useState24","telefonoAgresor","setTelefonoAgresor","_useState25","_useState26","unidad","setUnidad","_useState27","_useState28","comunaId","setComunaId","_useState29","_useState30","nombreComuna","setNombreComuna","_useState31","_useState32","tipoId","setTipoId","_useState33","_useState34","nombreTipo","setNombreTipo","_useState35","_useState36","establecimientoId","setEstablecimientoId","_useState37","_useState38","establecimientos","setEstablecimientos","servicioSalud","_useState39","_useState40","nombreTestigo1","setNombreTestigo1","_useState41","_useState42","rutTestigo1","setRutTestigo1","_useState43","_useState44","telefonoTestigo1","setTelefonoTestigo1","_useState45","_useState46","nombreTestigo2","setNombreTestigo2","_useState47","_useState48","rutTestigo2","setRutTestigo2","_useState49","_useState50","telefonoTestigo2","setTelefonoTestigo2","_useState51","_useState52","descripcion","setDescripcion","navigation","formatDate","text","cleaned","replace","match","formatted","handleHoraChange","formattedHora","length","slice","clearNum","verificarRut","rut","setRut","rutLimpio","rutRegExp","rutSinDigito","console","log","num","parseInt","dv","toUpperCase","M","S","numRut","Math","floor","dvEsperado","getEstablecimientosPorComunaYTipo","establecimientosFiltrados","filter","establecimiento","idComuna","idTipo","nombresEstablecimientos","map","nombre","handleComunaChange","comuna","find","c","id","name","nuevosEstablecimientos","handleTipoChange","tipo","t","handleEstablecimientoChange","saveNewForms","_ref","_asyncToGenerator","alert","apply","arguments","style","styles","container","children","backgroundColor","image","source","require","fontSize","color","fontWeight","textAlign","flex","justifyContent","alignItems","onPress","showPicker","showTimePicker","value","chosenTime","mode","is24Hour","display","onChange","onTimeChange","toLocaleTimeString","Titulo","subTitulo","placeholder","onChangeText","maxLength","textInput","campoIngresado","campoObligatorio","keyboardType","multiSelect","selectedValue","onValueChange","itemValue","Item","label","onBlur","alignSelf","index","descrip","multiline","Buttons","navigate","title","create","paddingVertical","paddingHorizontal","marginTop","height","borderRadius","flexDirection","borderWidth","borderColor","white","paddingStart","paddingEnd","width"],"sources":["C:/Users/NTK_17/Desktop/Tesis/proyecto-react-js/src/views/screens/FormularioScreen.js"],"sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport { StyleSheet, Text, View, TextInput, Image, StatusBar, Button, Alert, ScrollView, TouchableOpacity, Platform } from 'react-native';\r\nimport { Picker } from '@react-native-picker/picker';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { PrimaryButton } from '../components/Button';\r\nimport COLORS from './../../consts/colors';\r\n//import DateTimePicker from '@react-native-community/datetimepicker';\r\nimport dataComunaEstablecimiento from '../../consts/dataComunaEstablecimiento'\r\nimport dataEstablecimientos from '../../consts/dataEstablecimientos'\r\nimport dataTipoEstablecimiento from '../../consts/dataTipoEstablecimiento'\r\nimport DateTimePicker from '@react-native-community/datetimepicker';\r\nconst FormularioScreen = () => {\r\n  const [agresion, setAgresion] = useState('');\r\n  const [agresor, setAgresor] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [nombreAgresor, setNombreAgresor] = useState('');\r\n  const [rutAgresor, setRutAgresor] = useState('');\r\n  const [rutValidoAgresor, setRutValidoAgresor] = useState(false); //rut valido es el que se envia, no tiene dv\r\n  const [rutValidoTestigo1, setRutValidoTestigo1] = useState(false); //rut valido es el que se envia, no tiene dv\r\n  const [rutValidoTestigo2, setRutValidoTestigo2] = useState(false); //rut valido es el que se envia, no tiene dv\r\n  const [sectorAgresor, setSectorAgresor] = useState('');\r\n  const [domicilioAgresor, setDomicilioAgresor] = useState('');\r\n  const [telefonoAgresor, setTelefonoAgresor] = useState('');\r\n  const [unidad, setUnidad] = useState('');\r\n  const [comunaId, setComunaId] = useState('');\r\n  const [nombreComuna, setNombreComuna] = useState('');\r\n  const [tipoId, setTipoId] = useState('');\r\n  const [nombreTipo, setNombreTipo] = useState('');\r\n  const [establecimientoId, setEstablecimientoId] = useState('');\r\n  const [establecimientos, setEstablecimientos] = useState([]);\r\n  const servicioSalud = 'Servicio de salud del BioBio';\r\n  const [nombreTestigo1, setNombreTestigo1] = useState('');\r\n  const [rutTestigo1, setRutTestigo1] = useState('');\r\n  const [telefonoTestigo1, setTelefonoTestigo1] = useState('');\r\n  const [nombreTestigo2, setNombreTestigo2] = useState('');\r\n  const [rutTestigo2, setRutTestigo2] = useState('');\r\n  const [telefonoTestigo2, setTelefonoTestigo2] = useState('');\r\n  const [descripcion, setDescripcion] = useState('');\r\n\r\n  const navigation = useNavigation();\r\n\r\n  //--------------------------------------------------FECHA-----------------------------------------\r\n  const formatDate = (text) => {\r\n    // Elimina todo lo que no sea dígito\r\n    const cleaned = text.replace(/[^0-9]/g, '')\r\n\r\n    // Divide en grupos de 2, 2 y 4 caracteres\r\n    const match = cleaned.match(/^(\\d{2})(\\d{2})(\\d{4})$/)\r\n\r\n    if (match) {\r\n      // Formatea la fecha con los separadores deseados\r\n      const formatted = match[1] + '/' + match[2] + '/' + match[3]\r\n      setDate(formatted)\r\n    } else {\r\n      setDate(cleaned)\r\n    }\r\n  }\r\n  //-----------------------------------------HORA--------------------------------------------------\r\n\r\n  const handleHoraChange = (text) => {\r\n\t\t// Lógica para formatear la hora en formato de 12 horas con dos puntos\r\n\t\t// Ejemplo: convierte \"1111\" a \"11:11\"\r\n\t\tlet formattedHora = ''\r\n\t\tif (text.length === 2 && time.length < 2) {\r\n\t\t\tformattedHora = `${text}:`\r\n\t\t} else if (text.length > 2 && time.length === 2) {\r\n\t\t\tformattedHora = `${text.slice(0, 2)}:${text.slice(2)}`\r\n\t\t} else {\r\n\t\t\tformattedHora = text\r\n\t\t}\r\n\t\tsetTime(formattedHora)\r\n\t}\r\n\r\n  //--------------------------------------------------NUMERO-----------------------------------------\r\n  const clearNum = (text) => {\r\n    const cleaned = text.replace(/[^0-9]/g, '');\r\n    setTelefonoAgresor(cleaned)\r\n  }\r\n  //--------------------------------------------------RUT-----------------------------------------\r\n  const verificarRut = (rut, setRut) => {\r\n    // Remover guiones y puntos del Rut\r\n    const rutLimpio = rut.replace(/[^0-9Kk]/g, '');\r\n\r\n    // Obtener el número base y dígito verificador\r\n    const rutRegExp = /^(\\d+)([kK\\d])$/;\r\n    const rutSinDigito = rutLimpio.slice(0, -1);\r\n    const match = rutLimpio.match(rutRegExp);\r\n\r\n    if (!match) {\r\n      // El Rut no cumple con el formato válido\r\n      console.log('Error', 'El Rut ingresado no es válido');\r\n      return;\r\n    }\r\n\r\n    const num = parseInt(match[1]);\r\n    const dv = match[2].toUpperCase();\r\n\r\n    // Calcular dígito verificador esperado\r\n    let M = 0;\r\n    let S = 1;\r\n    let numRut = num; // Crear una nueva variable para almacenar el valor numérico del Rut\r\n    for (; numRut; numRut = Math.floor(numRut / 10)) {\r\n      S = (S + numRut % 10 * (9 - M++ % 6)) % 11;\r\n    }\r\n\r\n    const dvEsperado = S ? S - 1 + '' : 'K';\r\n\r\n    // Comparar dígito verificador ingresado con el esperado\r\n    if (dv === dvEsperado) {\r\n      console.log('Éxito', 'El Rut ingresado es válido');\r\n      setRut(rutSinDigito);\r\n    } else {\r\n      console.log('Error', 'El Rut ingresado es incorrecto');\r\n      setRut(false);\r\n    }\r\n  };\r\n  //-----------------------------------------comuna tipo establecimiento----------------------------------------------------\r\n  const getEstablecimientosPorComunaYTipo = (comunaId, tipoId) => {\r\n    const establecimientosFiltrados = dataEstablecimientos.filter(\r\n      establecimiento => establecimiento.idComuna === comunaId && establecimiento.idTipo === tipoId\r\n    );\r\n    const nombresEstablecimientos = establecimientosFiltrados.map(\r\n      establecimiento => establecimiento.nombre\r\n    );\r\n    setEstablecimientoId('');\r\n    return nombresEstablecimientos;\r\n  };\r\n\r\n  const handleComunaChange = comunaId => {\r\n    setComunaId(comunaId);\r\n    const comuna = dataComunaEstablecimiento.find(c => c.id === comunaId);\r\n    setNombreComuna(comuna ? comuna.name : '');\r\n    const nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\r\n    setEstablecimientos(nuevosEstablecimientos);\r\n  };\r\n\r\n  const handleTipoChange = tipoId => {\r\n    setTipoId(tipoId);\r\n    const tipo = dataTipoEstablecimiento.find(t => t.id === tipoId);\r\n    setNombreTipo(tipo ? tipo.nombre : '');\r\n    const nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\r\n    setEstablecimientos(nuevosEstablecimientos);\r\n  };\r\n\r\n  const handleEstablecimientoChange = establecimientoId => {\r\n    setEstablecimientoId(establecimientoId);\r\n  }\r\n  //---------------------------------------Save form----------------------------------------------------------\r\n  const saveNewForms = async () => {\r\n    if (!agresion || !date || !time || !comuna || !establecimiento || !unidad || !nombreTestigo1 || !rutTestigo1 || !telefonoTestigo1 || !descripcion) {\r\n      Alert.alert('Error', 'Por favor complete todos los campos obligatorios');\r\n      console.log('error')\r\n    } else {\r\n      Alert.alert('Guardado exitoso');\r\n    }\r\n  }\r\n\r\n  //-------------------------------------------------------------------------------------------------\r\n  /*  <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <TouchableOpacity onPress={showPicker}>\r\n              <Text>Selecciona una hora</Text>\r\n            </TouchableOpacity>\r\n            {showTimePicker && (\r\n              <DateTimePicker\r\n                value={chosenTime}\r\n                mode=\"time\"\r\n                is24Hour={true}\r\n                display=\"default\"\r\n                onChange={onTimeChange}\r\n              />\r\n            )}\r\n            <Text>La hora seleccionada es: {chosenTime.toLocaleTimeString()}</Text>\r\n          </View> */\r\n  return (\r\n    <View style={styles.container}>\r\n      <StatusBar backgroundColor=\"black\" />\r\n      <ScrollView>\r\n        <Image\r\n          style={styles.image}\r\n          source={require('./../../assets/logo_MS.png')}\r\n        />\r\n        <Text style={{ fontSize: 15, color: \"black\", fontWeight: 'bold', textAlign: 'center' }}>\r\n          FORMULARIO DE NOTIFICACIÓN DE AGRESIONES HACIA\r\n          LOS FUNCIONARIOS DE LA SALUD PÚBLICA</Text>\r\n\r\n\r\n\r\n          <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n            <TouchableOpacity onPress={showPicker}>\r\n              <Text>Selecciona una hora</Text>\r\n            </TouchableOpacity>\r\n            {showTimePicker && (\r\n              <DateTimePicker\r\n                value={chosenTime}\r\n                mode=\"time\"\r\n                is24Hour={true}\r\n                display=\"default\"\r\n                onChange={onTimeChange}\r\n              />\r\n            )}\r\n            <Text>La hora seleccionada es: {chosenTime.toLocaleTimeString()}</Text>\r\n          </View>\r\n\r\n\r\n\r\n        <Text style={styles.Titulo}>Datos de la agresión</Text>\r\n\r\n        <Text style={styles.subTitulo}>Ingrese fecha (*)</Text>\r\n        <TextInput\r\n          value={date}\r\n          placeholder=\"dd/mm/yyyy\"\r\n          onChangeText={formatDate}\r\n          maxLength={8}\r\n          style={styles.textInput}\r\n        />\r\n        {date ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n        <Text style={styles.Titulo}>----------------------------------</Text>\r\n\r\n\r\n        <Text style={styles.Titulo}>----------------------------------</Text>\r\n        <Text style={styles.subTitulo}>Ingrese hora*</Text>\r\n        <TextInput style={styles.textInput}\r\n          value={time}\r\n          onChangeText={handleHoraChange}\r\n          placeholder=\"hh:mm\"\r\n          keyboardType=\"numeric\"\r\n          maxLength={5}\r\n        />\r\n        {time ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Ingrese tipo de agresión*</Text>\r\n        <View style={styles.multiSelect}>\r\n          <Picker\r\n            selectedValue={agresion}\r\n            onValueChange={(itemValue) => setAgresion(itemValue)}\r\n          >\r\n            <Picker.Item label=\"Seleccione\" value=\"\" />\r\n            <Picker.Item label=\"Con arma de fuego\" value=\"Arma de fuego\" />\r\n            <Picker.Item label=\"Con arma blanca\" value=\"Arma blanca\" />\r\n            <Picker.Item label=\"Con objeto contundente\" value=\"Objeto contundente\" />\r\n            <Picker.Item label=\"Sexual\" value=\"Sexual\" />\r\n            <Picker.Item label=\"Empujones, combos, patadas\" value=\"Empujones, combos, patadas\" />\r\n            <Picker.Item label=\"Otros tipo de agresión física\" value=\"Otros tipo de agresión física\" />\r\n            <Picker.Item label=\"Ataque contra la infraestructura\" value=\"Ataque contra la infraestructura\" />\r\n            <Picker.Item label=\"Sexual verbal\" value=\"Sexual verbal\" />\r\n            <Picker.Item label=\"Amenazas u hostigamientos\" value=\"Amenazas u hostigamientos\" />\r\n            <Picker.Item label=\"Insultos o garabatos\" value=\"Insultos o garabatos\" />\r\n            <Picker.Item label=\"Burlas o descalificaciones\" value=\"Burlas o descalificaciones\" />\r\n            <Picker.Item label=\"Calumnias por redes sociales, injurias\" value=\"Injurias,\r\n  calumnias por redes sociales\" />\r\n            <Picker.Item label=\"Otro tipo de agresión verbal\" value=\"Otro tipo de agresión verbal\" />\r\n          </Picker>\r\n        </View>\r\n        {agresion ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Tipo de agresor</Text>\r\n        <View style={styles.multiSelect}>\r\n          <Picker\r\n            selectedValue={agresor}\r\n            onValueChange={(itemValue) => setAgresor(itemValue)}\r\n          >\r\n            <Picker.Item label=\"Seleccione\" value=\"\" />\r\n            <Picker.Item label=\"Paciente\" value=\"Paciente\" />\r\n            <Picker.Item label=\"Familiar/acompañante del paciente\" value=\"Familiar/acompañante del paciente\" />\r\n            <Picker.Item label=\"Paciente de Salud Mental\" value=\"Paciente de Salud Mental\" />\r\n            <Picker.Item label=\"Otro/a\" value=\"Otro/a\" />\r\n          </Picker>\r\n        </View>\r\n        {agresor ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n\r\n        <Text style={styles.Titulo}>Datos del agresor</Text>\r\n        <Text style={styles.subTitulo}>Ingrese nombre</Text>\r\n        <TextInput\r\n          value={nombreAgresor}\r\n          onChangeText={setNombreAgresor}\r\n          placeholder=\"Nombre completo\"\r\n          maxLength={60}\r\n          style={styles.textInput}\r\n        />\r\n\r\n        <Text style={styles.subTitulo}>Ingrese rut</Text>\r\n        <TextInput\r\n          value={rutAgresor}\r\n          onChangeText={setRutAgresor}\r\n          onBlur={() => verificarRut(rutAgresor, setRutValidoAgresor)}\r\n          maxLength={9}\r\n          keyboardType='numeric'\r\n          placeholder=\"Rut sin puntos ni guion\"\r\n          style={styles.textInput}\r\n        />\r\n        {rutValidoAgresor ? (\r\n          <Text style={{ color: 'green', alignSelf: 'center' }}>Rut válido</Text>\r\n        ) : (\r\n          <Text style={{ color: 'red', alignSelf: 'center' }}>Rut incorrecto</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Ingrese sector del agresor</Text>\r\n        <TextInput\r\n          value={sectorAgresor}\r\n          onChangeText={setSectorAgresor}\r\n          placeholder=\"Sector\"\r\n          maxLength={20}\r\n          style={styles.textInput}\r\n        />\r\n        <Text style={styles.subTitulo}>Ingrese dirección</Text>\r\n        <TextInput\r\n          value={domicilioAgresor}\r\n          onChangeText={setDomicilioAgresor}\r\n          placeholder=\"domicilio\"\r\n          maxLength={30}\r\n          style={styles.textInput}\r\n        />\r\n\r\n        <Text style={styles.subTitulo}>Ingrese teléfono</Text>\r\n        <TextInput\r\n          value={telefonoAgresor}\r\n          onChangeText={clearNum}\r\n          keyboardType='numeric'\r\n          placeholder=\"111111111\"\r\n          maxLength={9}\r\n          style={styles.textInput}\r\n        />\r\n\r\n        <Text style={styles.Titulo}>Datos del lugar de la agresión</Text>\r\n        <Text style={styles.subTitulo}>Seleccione una comuna</Text>\r\n        <View style={styles.multiSelect}>\r\n          <Picker\r\n            selectedValue={comunaId}\r\n            onValueChange={handleComunaChange}\r\n          >\r\n            <Picker.Item label=\"Seleccione una comuna\" value=\"\" />\r\n            {dataComunaEstablecimiento.map(comuna => (\r\n              <Picker.Item key={comuna.id} label={comuna.name} value={comuna.id} />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n        {comunaId ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Seleccione un tipo de establecimiento</Text>\r\n        <View style={styles.multiSelect}>\r\n          <Picker\r\n            selectedValue={tipoId}\r\n            onValueChange={handleTipoChange}\r\n          >\r\n            <Picker.Item label=\"Seleccione un tipo de establecimiento\" value=\"\" />\r\n            {dataTipoEstablecimiento.map(tipo => (\r\n              <Picker.Item key={tipo.id} label={tipo.nombre} value={tipo.id} />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n        {tipoId ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n\r\n        <Text style={styles.subTitulo}>Seleccione un establecimiento</Text>\r\n        <View style={styles.multiSelect}>\r\n          <Picker\r\n            selectedValue={establecimientoId}\r\n            onValueChange={handleEstablecimientoChange}\r\n          >\r\n            <Picker.Item label=\"Seleccione un establecimiento\" value=\"\" />\r\n            {establecimientos.map((nombre, index) => (\r\n              <Picker.Item key={index} label={nombre} value={nombre} />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n        {establecimientoId ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Ingrese unidad</Text>\r\n        <TextInput\r\n          value={unidad}\r\n          onChangeText={setUnidad}\r\n          placeholder=\"Unidad\"\r\n          maxLength={20}\r\n          style={styles.textInput}\r\n        />\r\n        <Text style={styles.Titulo}>Datos testigos</Text>\r\n        <Text style={styles.subTitulo}>Ingrese nombre de testigo 1*</Text>\r\n        <TextInput\r\n          value={nombreTestigo1}\r\n          onChangeText={setNombreTestigo1}\r\n          placeholder=\"Nombre\"\r\n          maxLength={50}\r\n          style={styles.textInput}\r\n        />\r\n        {nombreTestigo1 ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n        <Text style={styles.subTitulo}>Ingrese rut de testigo 1*</Text>\r\n        <TextInput\r\n          value={rutTestigo1}\r\n          onChangeText={setRutTestigo1}\r\n          onBlur={() => verificarRut(rutTestigo1, setRutValidoTestigo1)}\r\n          placeholder=\"Rut sin puntos ni guion\"\r\n          maxLength={12}\r\n          keyboardType='numeric'\r\n          style={styles.textInput}\r\n        />\r\n        {rutValidoTestigo1 ? (\r\n          <Text style={{ color: 'green', alignSelf: 'center' }}>Rut válido</Text>\r\n        ) : (\r\n          <Text style={{ color: 'red', alignSelf: 'center' }}>Rut incorrecto</Text>\r\n        )}\r\n\r\n\r\n        <Text style={styles.subTitulo}>Ingrese telefono de testigo 1*</Text>\r\n        <TextInput\r\n          value={telefonoTestigo1}\r\n          onChangeText={setTelefonoTestigo1}\r\n          placeholder=\"Telefono\"\r\n          maxLength={9}\r\n          keyboardType='numeric'\r\n          style={styles.textInput}\r\n        />\r\n        {telefonoTestigo1 ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n\r\n\r\n        <Text style={styles.Titulo}>Opcional tertigo 2</Text>\r\n        <Text style={styles.subTitulo}>Ingrese nombre de testigo 2</Text>\r\n        <TextInput\r\n          value={nombreTestigo2}\r\n          onChangeText={setNombreTestigo2}\r\n          placeholder=\"Nombre\"\r\n          maxLength={50}\r\n          style={styles.textInput}\r\n        />\r\n        <Text style={styles.subTitulo}>Ingrese rut de testigo 2</Text>\r\n        <TextInput\r\n          value={rutTestigo2}\r\n          onChangeText={setRutTestigo2}\r\n          onBlur={() => verificarRut(rutTestigo2, setRutValidoTestigo2)}\r\n          placeholder=\"Rut sin puntos ni guion\"\r\n          maxLength={9}\r\n          keyboardType='numeric'\r\n          style={styles.textInput}\r\n        />\r\n        {rutValidoTestigo2 ? (\r\n          <Text style={{ color: 'green', alignSelf: 'center' }}>Rut válido</Text>\r\n        ) : (\r\n          <Text style={{ color: 'red', alignSelf: 'center' }}>Rut incorrecto</Text>\r\n        )}\r\n\r\n\r\n        <Text style={styles.subTitulo}>Ingrese telefono de testigo 2</Text>\r\n        <TextInput\r\n          value={telefonoTestigo2}\r\n          onChangeText={setTelefonoTestigo2}\r\n          placeholder=\"Telefono\"\r\n          maxLength={9}\r\n          keyboardType='numeric'\r\n          style={styles.textInput}\r\n        />\r\n\r\n        <Text style={styles.Titulo}>Descripción de la agresión</Text>\r\n        <Text style={styles.subTitulo}>Descripción*</Text>\r\n        <TextInput\r\n          style={styles.descrip}\r\n          multiline\r\n          value={descripcion}\r\n          onChangeText={setDescripcion}\r\n        />\r\n        {descripcion ? (\r\n          <Text style={styles.campoIngresado}>Campo ingresado</Text>\r\n        ) : (\r\n          <Text style={styles.campoObligatorio}>Campo obligatorio</Text>\r\n        )}\r\n        <View >\r\n          <PrimaryButton\r\n            style={styles.Buttons}\r\n            onPress={() => navigation.navigate(\"Formularios\")}\r\n            title=\"Enviar\"\r\n          />\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n  container: {\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 30,\r\n    /* alignItems: 'center', */\r\n  },\r\n\r\n  Titulo: {\r\n    marginTop: 15,\r\n    color: '#1e6496',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  campoObligatorio: {\r\n    color: 'red',\r\n  },\r\n  campoIngresado: {\r\n    color: 'green'\r\n  },\r\n  subTitulo: {\r\n    flex: 1,\r\n    marginTop: 15,\r\n    height: 35,\r\n    borderRadius: 10,\r\n    flexDirection: 'row',\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  textInput: {\r\n    flex: 1,\r\n    height: 50,\r\n    fontSize: 15,\r\n    borderRadius: 10,\r\n    flexDirection: 'row',\r\n    borderWidth: 1, // Ancho del borde\r\n    borderColor: 'black', // Color del borde\r\n    backgroundColor: COLORS.white,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  Buttons: {\r\n    fontSize: 13,\r\n  },\r\n\r\n  multiSelect: {\r\n    height: 50,\r\n    borderWidth: 1, // Ancho del borde\r\n    borderColor: 'black', // Color del borde\r\n    borderRadius: 10,\r\n    backgroundColor: COLORS.white,\r\n    /* justifyContent: 'center',\r\n    alignItems: 'center', */\r\n  },\r\n  descrip: {\r\n    backgroundColor: 'white',\r\n    alignSelf: 'center',\r\n    borderWidth: 1, // Ancho del borde\r\n    borderColor: 'black', // Color del borde\r\n    paddingStart: 10,\r\n    paddingEnd: 10,\r\n    width: '100%',\r\n    height: 200,\r\n    borderRadius: 30,\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    alignSelf: 'center',\r\n    marginTop: 30,\r\n  }\r\n\r\n  /* ,\r\n  categoriesListContainer: {\r\n    paddingVertical: 30,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  categoryBtn: {\r\n    height: 45,\r\n    width: 120,\r\n    marginRight: 7,\r\n    borderRadius: 30,\r\n    alignItems: 'center',\r\n    paddingHorizontal: 5,\r\n    flexDirection: 'row',\r\n  },\r\n  categoryBtnImgCon: {\r\n    height: 35,\r\n    width: 35,\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 30,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  }, */\r\n  /*   card: {\r\n      height: 220,\r\n      width: cardWidth,\r\n      marginHorizontal: 10,\r\n      marginBottom: 20,\r\n      marginTop: 50,\r\n      borderRadius: 15,\r\n      elevation: 13,\r\n      backgroundColor: COLORS.white,\r\n    },\r\n    addToCartBtn: {\r\n      height: 30,\r\n      width: 30,\r\n      borderRadius: 20,\r\n      backgroundColor: COLORS.primary,\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n  \r\n  cocntainer: {\r\n      marginTop: 20,\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      paddingHorizontal: 20,\r\n    },\r\n  \r\n    }, */\r\n});\r\n\r\nexport default FormularioScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}