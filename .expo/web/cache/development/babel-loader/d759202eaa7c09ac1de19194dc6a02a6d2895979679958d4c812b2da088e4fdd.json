{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport dataComunaEstablecimiento from \"../../consts/dataComunaEstablecimiento\";\nimport dataEstablecimientos from \"../../consts/dataEstablecimientos\";\nimport dataTipoEstablecimiento from \"../../consts/dataTipoEstablecimiento\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar EstablecimientosPicker = function EstablecimientosPicker() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    comunaId = _useState2[0],\n    setComunaId = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    tipoId = _useState4[0],\n    setTipoId = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    establecimientos = _useState6[0],\n    setEstablecimientos = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    establecimientoSeleccionado = _useState8[0],\n    setEstablecimientoSeleccionado = _useState8[1];\n  var getEstablecimientosPorComunaYTipo = function getEstablecimientosPorComunaYTipo(comunaId, tipoId) {\n    var establecimientosFiltrados = dataEstablecimientos.filter(function (establecimiento) {\n      return establecimiento.idComuna === comunaId && establecimiento.idTipo === tipoId;\n    });\n    var nombresEstablecimientos = establecimientosFiltrados.map(function (establecimiento) {\n      return establecimiento.nombre;\n    });\n    return nombresEstablecimientos;\n  };\n  var filtrarEstablecimientos = function filtrarEstablecimientos() {\n    var establecimientosFiltrados = dataEstablecimientos.filter(function (establecimiento) {\n      return establecimiento.idComuna === comunaSeleccionada && establecimiento.idTipo === tipoSeleccionado;\n    });\n    return establecimientosFiltrados.map(function (establecimiento) {\n      return _jsx(Picker.Item, {\n        label: establecimiento.nombre,\n        value: establecimiento.nombre\n      }, establecimiento.nombre);\n    });\n  };\n  var handleComunaChange = function handleComunaChange(comunaId) {\n    setComunaId(comunaId);\n    var nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\n    setEstablecimientos(nuevosEstablecimientos);\n  };\n  var handleTipoChange = function handleTipoChange(tipoId) {\n    setTipoId(tipoId);\n    var nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\n    setEstablecimientos(nuevosEstablecimientos);\n  };\n  return _jsxs(View, {\n    children: [_jsxs(Picker, {\n      selectedValue: comunaId,\n      onValueChange: handleComunaChange,\n      children: [_jsx(Picker.Item, {\n        label: \"Seleccione una comuna\",\n        value: \"\"\n      }), dataComunaEstablecimiento.map(function (comuna) {\n        return _jsx(Picker.Item, {\n          label: comuna.name,\n          value: comuna.id\n        }, comuna.id);\n      })]\n    }), _jsxs(Picker, {\n      selectedValue: tipoId,\n      onValueChange: handleTipoChange,\n      children: [_jsx(Picker.Item, {\n        label: \"Seleccione un tipo de establecimiento\",\n        value: \"\"\n      }), dataTipoEstablecimiento.map(function (tipo) {\n        return _jsx(Picker.Item, {\n          label: tipo.nombre,\n          value: tipo.id\n        }, tipo.id);\n      })]\n    }), comunaSeleccionada && tipoSeleccionado && _jsxs(_Fragment, {\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Selecciona un establecimiento:\"\n      }), _jsx(Picker, {\n        selectedValue: establecimientoSeleccionado,\n        onValueChange: function onValueChange(itemValue) {\n          return setEstablecimientoSeleccionado(itemValue);\n        },\n        children: filtrarEstablecimientos()\n      })]\n    })]\n  });\n};\nexport default EstablecimientosPicker;","map":{"version":3,"names":["React","useState","useEffect","View","Text","Picker","dataComunaEstablecimiento","dataEstablecimientos","dataTipoEstablecimiento","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","EstablecimientosPicker","_useState","_useState2","_slicedToArray","comunaId","setComunaId","_useState3","_useState4","tipoId","setTipoId","_useState5","_useState6","establecimientos","setEstablecimientos","_useState7","_useState8","establecimientoSeleccionado","setEstablecimientoSeleccionado","getEstablecimientosPorComunaYTipo","establecimientosFiltrados","filter","establecimiento","idComuna","idTipo","nombresEstablecimientos","map","nombre","filtrarEstablecimientos","comunaSeleccionada","tipoSeleccionado","Item","label","value","handleComunaChange","nuevosEstablecimientos","handleTipoChange","children","selectedValue","onValueChange","comuna","name","id","tipo","style","styles","title","itemValue"],"sources":["C:/Users/NTK_17/Desktop/Tesis/proyecto-react-js/src/views/screens/EstablecimientosPicker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Picker } from 'react-native';\r\n\r\nimport dataComunaEstablecimiento from '../../consts/dataComunaEstablecimiento'\r\nimport dataEstablecimientos from '../../consts/dataEstablecimientos'\r\nimport dataTipoEstablecimiento from '../../consts/dataTipoEstablecimiento'\r\n\r\nconst EstablecimientosPicker = () => {\r\n    const [comunaId, setComunaId] = useState('');\r\n    const [tipoId, setTipoId] = useState('');\r\n    const [establecimientos, setEstablecimientos] = useState([]);\r\n    const [establecimientoSeleccionado, setEstablecimientoSeleccionado] = useState('');\r\n\r\n    const getEstablecimientosPorComunaYTipo = (comunaId, tipoId) => {\r\n        const establecimientosFiltrados = dataEstablecimientos.filter(\r\n            establecimiento => establecimiento.idComuna === comunaId && establecimiento.idTipo === tipoId\r\n        );\r\n        const nombresEstablecimientos = establecimientosFiltrados.map(\r\n            establecimiento => establecimiento.nombre\r\n        );\r\n        return nombresEstablecimientos;\r\n    };\r\n\r\n    const filtrarEstablecimientos = () => {\r\n        const establecimientosFiltrados = dataEstablecimientos.filter(establecimiento => {\r\n            return establecimiento.idComuna === comunaSeleccionada && establecimiento.idTipo === tipoSeleccionado;\r\n        });\r\n        return establecimientosFiltrados.map(establecimiento => {\r\n            return <Picker.Item key={establecimiento.nombre} label={establecimiento.nombre} value={establecimiento.nombre} />\r\n        });\r\n    };\r\n\r\n    const handleComunaChange = comunaId => {\r\n        setComunaId(comunaId);\r\n        const nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\r\n        setEstablecimientos(nuevosEstablecimientos);\r\n    };\r\n\r\n    const handleTipoChange = tipoId => {\r\n        setTipoId(tipoId);\r\n        const nuevosEstablecimientos = getEstablecimientosPorComunaYTipo(comunaId, tipoId);\r\n        setEstablecimientos(nuevosEstablecimientos);\r\n    };\r\n\r\n    return (\r\n        <View>\r\n            <Picker\r\n                selectedValue={comunaId}\r\n                onValueChange={handleComunaChange}\r\n            >\r\n                <Picker.Item label=\"Seleccione una comuna\" value=\"\" />\r\n                {dataComunaEstablecimiento.map(comuna => (\r\n                    <Picker.Item key={comuna.id} label={comuna.name} value={comuna.id} />\r\n                ))}\r\n            </Picker>\r\n            <Picker\r\n                selectedValue={tipoId}\r\n                onValueChange={handleTipoChange}\r\n            >\r\n                <Picker.Item label=\"Seleccione un tipo de establecimiento\" value=\"\" />\r\n                {dataTipoEstablecimiento.map(tipo => (\r\n                    <Picker.Item key={tipo.id} label={tipo.nombre} value={tipo.id} />\r\n                ))}\r\n            </Picker>\r\n            {comunaSeleccionada && tipoSeleccionado &&\r\n                <>\r\n                    <Text style={styles.title}>Selecciona un establecimiento:</Text>\r\n                    <Picker\r\n                        selectedValue={establecimientoSeleccionado}\r\n                        onValueChange={(itemValue) => setEstablecimientoSeleccionado(itemValue)}\r\n                    >\r\n                        {filtrarEstablecimientos()}\r\n                    </Picker>\r\n                </>\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\n\r\nexport default EstablecimientosPicker;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}